# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
  
  pull_request:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.115.3
    steps:
      - name: Cache Hugo Deb
        uses: actions/cache@v3
        id: cache-hugo
        with:
          path: ${{ runner.temp }}
          key: hugo-${{ env.HUGO_VERSION }}
      - name: Fetch Hugo Deb
        if: steps.cache-hugo.outputs.cache-hit != 'true'
        run: |
            wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
      - name: Install Hugo
        run: |
            sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
#      - name: Setup Pages
#        id: pages
#        uses: actions/configure-pages@v3
      - name: Fetch resources directory from cache
        uses: actions/cache@v3
        with:
          path: resources
          key: hugo-${{ env.HUGO_VERSION }}-resources-directory
          restore-keys: |
            hugo-${{ env.HUGO_VERSION }}-resources-directory
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo
#          eval $(ssh-agent -s)
#          ssh-add - <<< '${{ secrets.DEPLOY_KEY }}'
#          rsync -e 'ssh -p ${{ secrets.DEPLOY_PORT }} -o StrictHostKeyChecking=no' --archive --delete --exclude '*.jpg' public/* 'procedere@${{ secrets.DEPLOY_HOST }}:'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4